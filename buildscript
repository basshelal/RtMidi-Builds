#!/usr/bin/env bash

info() {
    echo -e "\e[42mINFO:"$*"\e[49m"
}

errors=0
error() {
    echo -e "\e[41mERROR:"$*"\e[49m"
    let "errors++"
}

checkError() {
    if [[ $? != 0 ]]; then
        error "An error occurred $*"
    fi
}

os=$(uname -s)
cpu=$(uname -m)

info "OS is $os"
info "CPU is $cpu"

# Linux
if [[ "$os" == "Linux" ]]; then
    if [[ "$cpu" != "x86_64" ]]; then
        error "Cannot compile for Linux non x86_64!"
        exit
    fi

    if [[ ! -d "/usr/include/alsa" ]]; then
        error "Alsa headers not found!"
        error "Run sudo apt install libasound2-dev"
    else
        info "Compiling for ALSA"

        outdir="./libs/alsa-"$cpu""
        mkdir -p "$outdir"

        info "Compiling source files for ALSA"

        g++ -Wall -c -fPIC -D__LINUX_ALSA__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread

        checkError "Compiling source files for ALSA"

        info "Creating library for ALSA"

        g++ -Wall -shared -fPIC -D__LINUX_ALSA__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread

        checkError "Creating library for ALSA"

        rm rtmidi_c.o RtMidi.o

        if [[ -z $(command -v arm-linux-gnueabihf-g++-8) ]]; then
            error "Could not cross compile for ALSA arm, missing arm-linux-gnueabihf-g++-8"
        else
            outdir="./libs/alsa-arm"
            mkdir -p "$outdir"

            info "Cross compiling source files for ALSA arm"

            arm-linux-gnueabihf-g++-8 -Wall -c -fPIC -D__LINUX_ALSA__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread

            checkError "Cross compiling source files for ALSA arm"

            info "Creating library for ALSA arm"

            arm-linux-gnueabihf-g++-8 -Wall -shared -fPIC -D__LINUX_ALSA__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread

            checkError "Creating library for ALSA arm"

            rm rtmidi_c.o RtMidi.o
        fi

        if [[ -z $(command -v aarch64-linux-gnu-g++-8) ]]; then
            error "Could not cross compile for ALSA aarch64, missing aarch64-linux-gnu-g++-8"
        else
            outdir="./libs/alsa-aarch64"
            mkdir -p "$outdir"

            info "Cross compiling source files for ALSA aarch64"

            aarch64-linux-gnu-g++-8 -Wall -c -fPIC -D__LINUX_ALSA__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread

            checkError "Cross compiling source files for ALSA aarch64"

            info "Creating library for ALSA aarch64"

            aarch64-linux-gnu-g++-8 -Wall -shared -fPIC -D__LINUX_ALSA__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread

            checkError "Creating library for ALSA aarch64"

            rm rtmidi_c.o RtMidi.o
        fi
    fi

    if [[ ! -d "/usr/include/jack" ]]; then
        error "Jack headers not found!"
        error "Run sudo apt install libjack-jackd2-dev"
    else
        info "Compiling for ALSA + JACK"

        outdir="./libs/alsa-jack-"$cpu""
        mkdir -p "$outdir"

        info "Compiling source files for ALSA + JACK"

        g++ -Wall -c -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread -ljack

        checkError "Compiling source files for ALSA + JACK"

        info "Creating library for ALSA + JACK"

        g++ -Wall -shared -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread -ljack

        checkError "Creating library for ALSA + JACK"

        rm rtmidi_c.o RtMidi.o

        if [[ -z $(command -v arm-linux-gnueabihf-g++-8) ]]; then
            error "Could not cross compile for ALSA + JACK arm, missing arm-linux-gnueabihf-g++-8"
        else
            outdir="./libs/alsa-jack-arm"
            mkdir -p "$outdir"

            info "Cross compiling source files for ALSA + JACK arm"

            arm-linux-gnueabihf-g++-8 -Wall -c -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread -ljack

            checkError "Cross compiling source files for ALSA + JACK arm"

            info "Creating library for ALSA + JACK arm"

            arm-linux-gnueabihf-g++-8 -Wall -shared -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread -ljack

            checkError "Creating library for ALSA + JACK arm"

            rm rtmidi_c.o RtMidi.o
        fi

        if [[ -z $(command -v aarch64-linux-gnu-g++-8) ]]; then
            error "Could not cross compile for ALSA + JACK aarch64, missing aarch64-linux-gnu-g++-8"
        else
            outdir="./libs/alsa-jack-aarch64"
            mkdir -p "$outdir"

            info "Compiling source files for ALSA + JACK aarch64"

            aarch64-linux-gnu-g++-8 -Wall -c -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ rtmidi_c.cpp RtMidi.cpp -lasound -lpthread -ljack

            checkError "Compiling source files for ALSA + JACK aarch64"

            info "Creating library for ALSA + JACK aarch64"

            aarch64-linux-gnu-g++-8 -Wall -shared -fPIC -D__LINUX_ALSA__ -D__UNIX_JACK__ -o "$outdir/librtmidi.so" rtmidi_c.o RtMidi.o -lasound -lpthread -ljack

            checkError "Creating library for ALSA + JACK aarch64"

            rm rtmidi_c.o RtMidi.o
        fi
    fi
fi

# Darwin
if [[ "$os" == "Darwin" ]]; then

    info "Compiling for CoreMIDI"

    outdir="./libs/core-"$cpu""
    mkdir -p "$outdir"

    info "Compiling source files"

    g++ -Wall -c -fPIC -D__MACOSX_CORE__ rtmidi_c.cpp RtMidi.cpp -framework CoreMIDI -framework CoreAudio -framework CoreFoundation

    checkError "Compiling source files"

    info "Creating library"

    g++ -Wall -shared -dylib -fPIC -D__MACOSX_CORE__ -o "$outdir/librtmidi.dylib" rtmidi_c.o RtMidi.o -framework CoreMIDI -framework CoreAudio -framework CoreFoundation

    checkError "Creating library"

    rm rtmidi_c.o RtMidi.o

    if [[ ! -d "/usr/local/include/jack" ]]; then
        error "Jack headers not found!"
        error "Run brew install jack"
    else
        # libjack.dylib is located at /usr/local/lib/libjack.dylib

        info "Compiling for CoreMIDI + JACK"

        outdir="./libs/core-jack-"$cpu""
        mkdir -p "$outdir"

        info "Compiling source files for CoreMIDI + JACK"

        g++ -Wall -c -fPIC -D__MACOSX_CORE__ -D__UNIX_JACK__ rtmidi_c.cpp RtMidi.cpp -framework CoreMIDI -framework CoreAudio -framework CoreFoundation -ljack

        checkError "Compiling source files for CoreMIDI + JACK"

        info "Creating library for CoreMIDI + JACK"

        g++ -Wall -shared -dylib -fPIC -D__MACOSX_CORE__ -D__UNIX_JACK__ -o "$outdir/librtmidi.dylib" rtmidi_c.o RtMidi.o -framework CoreMIDI -framework CoreAudio -framework CoreFoundation -ljack

        checkError "Creating library for CoreMIDI + JACK"

        rm rtmidi_c.o RtMidi.o
    fi
fi

# MSYS (Windows)
if [[ "$os" == "MSYS"* ]]; then
    info "Compiling for MSYS"

    if [[ "$cpu" != "x86_64" ]]; then
        error "Cannot compile for MSYS non x86_64!"
        exit
    fi
    info "Compiling for WinMM"

    outdir="./libs/winmm-"$cpu""
    mkdir -p "$outdir"

    info "Compiling source files for WinMM"

    g++ -Wall -c -fPIC -D__WINDOWS_MM__ rtmidi_c.cpp RtMidi.cpp

    checkError "Compiling source files for WinMM"

    info "Creating library for WinMM"

    g++ -Wall -shared -fPIC -D__WINDOWS_MM__ -o "$outdir/librtmidi.dll" -Wl,-out-implib,librtmidi.a,--export-all-symbols,--enable-auto-image-base,--enable-auto-import rtmidi_c.o RtMidi.o -lwinmm

    checkError "Creating library for WinMM"

    rm rtmidi_c.o RtMidi.o librtmidi.a
fi

info "Finished with "$errors" errors"
info "Output will be found in ./libs"
